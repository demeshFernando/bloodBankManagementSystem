<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>